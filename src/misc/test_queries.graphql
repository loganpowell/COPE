# Example of using introspection to get enum values

# shift-option/alt-click on a query below to jump to it in the explorer
# option/alt-click on a field in the explorer to select all subfields
query nodeEnums {
  __type(name: "NodeType"){
    name
    enumValues(includeDeprecated:true){
      name
      description      
      isDeprecated     
      deprecationReason
    }
  }
}

# shift-option/alt-click on a query below to jump to it in the explorer
# option/alt-click on a field in the explorer to select all subfields
fragment asset on Resource {
  id
  type
  node_id
	name
  content
}

fragment node on Node {
  id
  status
  type
  createdAt
  owner
  assets{
    items{
      ...asset
    }
  }
  _assets{
    items {
      ...asset
    }
  }
  edges(sortDirection:DESC){
    items{ #nodeEdges
      # id
      # edge_id
      # node_id
      # createdAt
      # owner
      edge{
        id
        type
        weight
        createdAt
        owner
        nodes(filter:{
          id:{
            ne: $nodeEdge
          }
        }){
          items{
            id
            node{
              id
              type
            }
          }
        }
      }
    }
  }
}

query listNodes($nodeEdge: ID) {
  listNodes {
    items {
      ...node
    }
  }
}

query getNode ($nodeEdge: ID){
  getNode(id:1){
    ...node
  }
}

query listEdges {
  listEdges {
    items{
      id
      type
      weight
      owner
      nodes{
        items{
          createdAt
          id
          edge_id
          node_id
          node{
            type
          }
        }
      }
    }
  }
}



query listAssets{
  listAssets{
    items{
      id
      node_id
      type
      name
    }
  }
}

query nodesByTypeStatus($nodeEdge: ID) {
  nodesByTypeStatus(
    type:H_AUTHOR_PAGE
    sortDirection:DESC
    statusCreatedAt:{
			beginsWith:{
				status:STUBBED
				# createdAt:"2021-04-05T21"
			}
			# ge:{
			# status:PROVISIONAL
			# createdAt:"2021-04-05T20"
			# }
    }
  ){
    items{
      ...node
    }
  }
}

query edgesByTypeWeight{
  edgesByTypeWeight(
    type:WORKED_WITH
    weightCreatedAt:{
      lt:{
        weight:2,
        # createdAt:"2022"
      }
    }
    sortDirection:DESC
  ){
    items{
      id
      type
      weight
      createdAt
    }
  }
}

############################
######## MUTATIONS #########
############################

mutation createNode {
  createNode(input:{
    id:1,
    type:H_AUTHOR_PAGE,
    status:STUBBED,
  }){
    id
    type
    status
    updatedAt
    createdAt
  }
}

mutation create_Resource {
  create_Asset(input:{
    id:1
    node_id:1
    type:V_IMAGE
    name:"this is a anothah boogah"
    content:"so you're saying we can't just..."
  }){
    id
    updatedAt
  }
}

mutation createResource {
  createAsset(input:{
    id:1
    node_id:1
    type:V_IMAGE
    name:"public resource name"
    content:"once upon a midnight, dreary"
  }){
    id
    updatedAt
  }
}


mutation createEdge {
  createEdge(input:{
    id:1
    type:CREATED_BY
    weight:0
  }){
    id
  }
}

# each Edge should have two Nodes: [from, to]
# create NodeEdge after creating both Nodes
# link each Node in order [from, to]
mutation createNodeEdge {
  createNodeEdge(input:{
    id: "1:1"
    node_id:1,
    edge_id:1,
  }){
    edge{
      id
      type
      weight
    }
  }
}